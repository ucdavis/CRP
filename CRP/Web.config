<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate"/>
    <section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true"/>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah"/>
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah"/>
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah"/>
    </sectionGroup>
  </configSections>
  <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
       which is necessary for OpenID urls with unicode characters in the domain/host name. 
       It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
  <uri>
    <idn enabled="All"/>
    <iriParsing enabled="true"/>
  </uri>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
      <property name="proxyfactory.factory_class">NHibernate.ByteCode.Spring.ProxyFactoryFactory, NHibernate.ByteCode.Spring</property>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="connection.connection_string_name">MainDB</property>
      <property name="default_schema">CRP.dbo</property>
      <property name="generate_statistics">true</property>
      <property name="adonet.batch_size">25</property>
      <!-- HBM Mapping Files -->
      <mapping assembly="CRP.Core"/>
    </session-factory>
  </hibernate-configuration>
  <appSettings file="AppSettings.config">
    <add key="AdminPageUrl" value="https://url.caes.ucdavis.edu/Catbert4/UserManagement/Manage/ConferenceRegistrationAndPayments"/>
    <add key="BingApiKey" value="[file]"/>
    <add key="RecaptchaPrivateKey" value="[file]"/>
    <add key="RecaptchaPublicKey" value="[file]"/>
    <add key="PaymentGateway" value="https://secure.touchnet.com:8443/C21642test_upay/web/index.jsp"/>
    <add key="TouchNetSiteId" value="[file]"/>
    <add key="TouchNetPostingKey" value="[file]"/>
    <add key="EmailForErrors" value="jsylvestre@ucDavis.edu"/>
    <add key="MessageServer" value="https://test.caes.ucdavis.edu/Catbert4/public/message.svc"/>
  </appSettings>
  <connectionStrings>
    <add name="MainDB" connectionString="data source=terry;Initial Catalog=CRP;Integrated Security=true;" providerName="System.Data.SqlClient"/>
    <add name="Catbert" connectionString="data source=terry;Initial Catalog=Catbert3;Integrated Security=true;" providerName="System.Data.SqlClient"/>
    <add name="RATBERT" connectionString="Data Source=terry;Initial Catalog=RATBERT;Integrated Security=True" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <!-- this is an optional configuration section where aspects of dotnetopenauth can be customized -->
  <dotNetOpenAuth>
    <openid>
      <relyingParty>
        <security requireSsl="false"/>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
                   with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth"/>
        </behaviors>
      </relyingParty>
    </openid>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- since this is a sample, and will often be used with localhost -->
          <add name="localhost"/>
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="false"/>
  </dotNetOpenAuth>
  <elmah>
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionStringName="RATBERT" applicationName="CRP"/>
    <errorMail from="jsylvestre@ucdavis.edu" to="jsylvestre@ucdavis.edu" subject="ELMAH CRP web error response" smtpServer="smtp.ucdavis.edu"/>
  </elmah>
  <system.web>
    <httpRuntime requestValidationMode="2.0"/>

    <customErrors mode="RemoteOnly" defaultRedirect="Error">
      <error statusCode="403" redirect="Error/NotAuthorized"/>
      <error statusCode="404" redirect="Error/FileNotFound"/>
    </customErrors>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" defaultUrl="~/" timeout="2880"/>
    </authentication>
    <roleManager enabled="true" defaultProvider="CatbertRoleProvider" cacheRolesInCookie="false">
      <providers>
        <add name="CatbertRoleProvider" type="UCDArch.Web.Providers.CatbertRoleProvider" applicationName="ConferenceRegistrationAndPayments" description="CRP Version 1" connectionString="CATBERT"/>
      </providers>
    </roleManager>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="System.Linq"/>
        <add namespace="System.Collections.Generic"/>
        <add namespace="MvcContrib.FluentHtml"/>
        <add namespace="Microsoft.Web.Mvc"/>
        <add namespace="xVal.Html"/>
        <add namespace="CRP.Controllers.Helpers"/>
        <add namespace="CRP.Core.Domain"/>
      </namespaces>
    </pages>
    <httpHandlers>
      <add verb="POST,GET,HEAD" path="Errors.axd" type="Elmah.ErrorLogPageFactory, Elmah"/>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
    </httpHandlers>
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/>
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah"/>
    </httpModules>
    <machineKey validationKey="6FD4315524A8145F3849345DD57391BFE1FDD15747731D2D309B921B50F84118DECC0029A1E2732E9221917037BDE85413E3B56B8ED2EF4715547260C2E1068C" decryptionKey="AB8F28D1BA3EAC3E7004A4861045BEAE69195BC27A098969D6C4706AD2C1FFE3" validation="SHA1" decryption="AES"/>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/>
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah"/>
    </modules>
    <handlers>
      <remove name="MvcHttpHandler"/>
      <remove name="UrlRoutingHandler"/>
      <add name="Elmah" verb="POST,GET,HEAD" path="Errors.axd" type="Elmah.ErrorLogPageFactory, Elmah"/>
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <services>
      <service name="CRP.Services.Wcf.ItemService" behaviorConfiguration="CustomAuthBehavior">
        <endpoint
            binding="basicHttpBinding"
            bindingConfiguration="RoleBindingConfiguration"
            contract="CRP.Services.Wcf.IItemService"
          >
        </endpoint>
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name = "RoleBindingConfiguration">
          <security mode ="None">
            <message clientCredentialType ="UserName"/>
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="CustomAuthBehavior">
          <serviceCredentials>
            <userNameAuthentication
            userNamePasswordValidationMode="Custom"
            customUserNamePasswordValidatorType="CRP.Services.Wcf.ServiceAuthorizationValidator, CRP"/>
          </serviceCredentials>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>