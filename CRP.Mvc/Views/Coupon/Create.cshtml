@model CRP.Controllers.ViewModels.CouponViewModel

@{
    ViewBag.Title = "Create new Coupon";
}

<div class="boundary">

<h2>Coupon for @Model.Item.Name</h2>

    @Html.ValidationSummary("Create was unsuccessful. Please correct the errors and try again.")
    
    @using(Html.BeginForm()) { 
    
        @Html.AntiForgeryToken()
    
        <fieldset>
            <legend>Fields</legend>
            
            <p>Coupon Type:</p>
            @Html.ValidationMessage("CouponType")
            <ul>
                <li><input type="radio" name="couponType" class="couponType" value="Unlimited" />Unlimited</li>
                <li><input type="radio" name="couponType" class="couponType" value="LimitedUsage" />Limited Usage
                
                    <span id="maxUsageContainer" style="display:inline-block; display:none; margin-left: 2em;">
                        <label>Maximum # of times this coupon can be used: </label>
                        @Html.TextBox("MaxUsage", Model.Coupon != null ? Model.Coupon.MaxUsage.ToString() : string.Empty) 
                        @Html.ValidationMessageFor(x => x.Coupon.MaxUsage)   
                    </span>

                </li>
                <li><input type="radio" name="couponType" class="couponType" value="SingleUsage" />Single Usage</li>
            </ul>

@*            <p>
                <label for="Unlimited">Unlimited Usage: </label>
                <%= Html.CheckBox("Unlimited", Model.Coupon != null ? Model.Coupon.Unlimited : false) %>
                <%= Html.ValidationMessage("Unlimited") %>
            </p>  *@

            <p>
                <label for="Expiration">Expiration Date: </label>
                @Html.TextBox("Expiration", Model.Coupon == null ? string.Empty : (Model.Coupon.Expiration.HasValue ? Model.Coupon.Expiration.Value.ToString("D") : string.Empty))
                @Html.ValidationMessage("Expiration")
            </p>
            <p>
                <label for="Email">E-Mail (Optional):</label>
                @Html.TextBox("Email", Model.Coupon != null ? Model.Coupon.Email : string.Empty)
                @Html.ValidationMessageFor(x => x.Coupon.Email)
            </p>
            <p>
                <label for="DiscountAmount">Discount Amount:</label>
                @Html.TextBox("DiscountAmount", Model.Coupon != null ? string.Format("{0:0.00}", Model.Coupon.DiscountAmount) : string.Empty)
                @Html.ValidationMessageFor(x => x.Coupon.DiscountAmount)
            </p>
            
            <p>
                <label for="MaxQuantity">Maximum Quantity per Transaction (Optional):</label>
                @Html.TextBox("MaxQuantity", Model.Coupon != null ? Model.Coupon.MaxQuantity.ToString() : string.Empty)
            </p>

@*            <p>
                <label for="MaxUsage">Maximum Usage:</label>
                
            </p>*@
            
            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    } 
    
    @Html.ActionLink("Back to Item", "Edit", "ItemManagement", new { id = Model.Item.Id }, null)
</div>


@section AdditionalScripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("input#Expiration").datepicker();

            $(".couponType").click(function () {
                if ($(this).val() === "LimitedUsage") {
                    $("#maxUsageContainer").show();
                }
                else {
                    $("#MaxUsage").val(0);
                    $("#maxUsageContainer").hide(); 
                }
            });
        });
    </script>

    <style type="text/css">
        label  
        {
            display: inline-block;
            min-width: 200px;
        }
    </style>

}
