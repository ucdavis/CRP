@using System.Globalization
@model IEnumerable<CRP.Core.Domain.Item>
@{
    var DisplayText = "Upcoming events";
    if (Model == null || !Model.Any())
    {
        DisplayText = "There are currently no events to browse";
    }
}
<h3 class="light t-secondary-font">@DisplayText</h3>
<div class="flex-it flex-flow-wrap">
    @foreach (var item in Model)
    {
        <div class="event_card">
            <a href="@Url.Action("Details", "Item", new { id = item.Id })">
                <img class="img-respo" src="@Url.Action("GetImage", "Item", new {id = item.Id})" alt="eventbanner-image" />
                <div class="event_card-details">
                    <h1>@item.Name</h1>
                    <P>
                        @item.Summary
                    </P>
                    @foreach (var ep in item.ExtendedPropertyAnswers.Where(a => a.Answer != string.Empty))
                    {
                        var answer = ep.Answer;
                        if (ep.ExtendedProperty.QuestionType.Name == "Date")
                        {
                            try
                            {
                                answer = Convert.ToDateTime(ep.Answer, new CultureInfo("en-US")).ToString("D");
                            }
                            catch
                            {
                                // ignored
                            }
                        }

                        <p>
                            <strong>@ep.ExtendedProperty.Name:</strong>
                            @answer
                        </p>
                    }
                    <p>
                        <strong>
                            Price Per @Html.Encode(item.QuantityName):
                        </strong>
                        @Html.Encode(String.Format("{0:C}", item.CostPerItem))
                    </p>
                    <p>
                        <strong>
                            Last day to register online:
                        </strong>
                        @Html.Encode(item.Expiration.HasValue ? item.Expiration.Value.ToString("D") : string.Empty)
                    </p>
                </div>
            </a>
        </div>
    }
</div>